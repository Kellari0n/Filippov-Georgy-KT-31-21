// <auto-generated />
using System;
using Filippov_Georgy_KT_31_21.TeacherService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Filippov_Georgy_KT_31_21.TeacherService.Migrations
{
    [DbContext(typeof(TeachersDbContext))]
    partial class TeachersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.TeacherService.Entities.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4")
                        .HasColumnName("degree_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_name");

                    b.HasKey("Id")
                        .HasName("pk_cs_degree_degree_id");

                    b.ToTable("cs_degree", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Кандидат наук"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Доктор наук"
                        });
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.TeacherService.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4")
                        .HasColumnName("post_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_name");

                    b.HasKey("Id")
                        .HasName("pk_cs_post_post_id");

                    b.ToTable("cs_post", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Преподаватель"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Старший преподаватель"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Доцент"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Профессор"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ассистент"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Заведующий кафедрой"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Научный сотрудник"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Главный научный сотрудник"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Декан"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Проректор"
                        });
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.TeacherService.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4")
                        .HasColumnName("teacher_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("timestamp")
                        .HasColumnName("d_birthdate");

                    b.Property<int?>("DegreeId")
                        .HasColumnType("int4")
                        .HasColumnName("f_degree_id");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_email");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("d_employment");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_last_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar")
                        .HasColumnName("c_phone");

                    b.Property<int>("PostId")
                        .HasColumnType("int4")
                        .HasColumnName("f_post_id");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("c_second_name");

                    b.HasKey("Id")
                        .HasName("pk_cd_teachers_teacher_id");

                    b.HasIndex(new[] { "DegreeId" }, "idx_cd_teachers_fk_f_degree_id");

                    b.HasIndex(new[] { "PostId" }, "idx_cd_teachers_fk_f_post_id");

                    b.ToTable("cd_teachers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1980, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DegreeId = 1,
                            DepartmentId = 1,
                            Email = "ivanov.aleksey@university.com",
                            EmploymentDate = new DateTime(2010, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Алексей",
                            LastName = "Петрович",
                            Phone = "+7-900-123-4567",
                            PostId = 3,
                            SecondName = "Иванов"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1975, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DegreeId = 2,
                            DepartmentId = 1,
                            Email = "smirnova.elena@university.com",
                            EmploymentDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Елена",
                            LastName = "Васильевна",
                            Phone = "+7-900-987-6543",
                            PostId = 4,
                            SecondName = "Смирнова"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1985, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "kuznetsov.dmitriy@university.com",
                            EmploymentDate = new DateTime(2015, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Дмитрий",
                            LastName = "Иванович",
                            Phone = "+7-900-222-3344",
                            PostId = 2,
                            SecondName = "Кузнецов"
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(1990, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "petrova.maria@university.com",
                            EmploymentDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Мария",
                            LastName = "Андреевна",
                            Phone = "+7-900-555-6677",
                            PostId = 1,
                            SecondName = "Петрова"
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(1982, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DegreeId = 1,
                            DepartmentId = 2,
                            Email = "vorobyev.sergey@university.com",
                            EmploymentDate = new DateTime(2012, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Сергей",
                            LastName = "Николаевич",
                            Phone = "+7-900-333-4455",
                            PostId = 2,
                            SecondName = "Воробьёв"
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(1988, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "fedorova.olga@university.com",
                            EmploymentDate = new DateTime(2018, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ольга",
                            LastName = "Сергеевна",
                            Phone = "+7-900-111-2233",
                            PostId = 1,
                            SecondName = "Фёдорова"
                        },
                        new
                        {
                            Id = 7,
                            Birthdate = new DateTime(1970, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DegreeId = 2,
                            DepartmentId = 3,
                            Email = "sidorov.andrey@university.com",
                            EmploymentDate = new DateTime(2000, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Андрей",
                            LastName = "Владимирович",
                            Phone = "+7-900-444-5566",
                            PostId = 4,
                            SecondName = "Сидоров"
                        },
                        new
                        {
                            Id = 8,
                            Birthdate = new DateTime(1995, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Email = "nikolaeva.lyudmila@university.com",
                            EmploymentDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Людмила",
                            LastName = "Александровна",
                            Phone = "+7-900-777-8899",
                            PostId = 5,
                            SecondName = "Николаева"
                        });
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.TeacherService.Entities.Teacher", b =>
                {
                    b.HasOne("Filippov_Georgy_KT_31_21.TeacherService.Entities.Degree", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_f_degree_id");

                    b.HasOne("Filippov_Georgy_KT_31_21.TeacherService.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_post_id");

                    b.Navigation("Degree");

                    b.Navigation("Post");
                });
#pragma warning restore 612, 618
        }
    }
}
