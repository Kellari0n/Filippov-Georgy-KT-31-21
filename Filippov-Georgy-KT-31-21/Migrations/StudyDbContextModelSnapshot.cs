// <auto-generated />
using System;
using Filippov_Georgy_KT_31_21.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Filippov_Georgy_KT_31_21.Migrations
{
    [DbContext(typeof(StudyDbContext))]
    partial class StudyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Degrees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Кандидат наук"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Доктор наук"
                        });
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HeadId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HeadId")
                        .IsUnique();

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HeadId = 1,
                            Name = "Кафедра математики"
                        },
                        new
                        {
                            Id = 2,
                            HeadId = 2,
                            Name = "Кафедра физики"
                        },
                        new
                        {
                            Id = 3,
                            HeadId = 3,
                            Name = "Кафедра информатики"
                        },
                        new
                        {
                            Id = 4,
                            HeadId = 4,
                            Name = "Кафедра философии"
                        });
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Disciplines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Name = "Математический анализ"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Name = "Теоретическая механика"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Name = "Программирование"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            Name = "История философии"
                        });
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Posts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Преподаватель"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Старший преподаватель"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Доцент"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Профессор"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ассистент"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Заведующий кафедрой"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Научный сотрудник"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Главный научный сотрудник"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Декан"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Проректор"
                        });
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DegreeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DegreeId");

                    b.HasIndex("PostId");

                    b.ToTable("Teachers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DegreeId = 1,
                            FirstName = "Алексей",
                            LastName = "Петрович",
                            PostId = 3,
                            SecondName = "Иванов"
                        },
                        new
                        {
                            Id = 2,
                            DegreeId = 2,
                            FirstName = "Елена",
                            LastName = "Васильевна",
                            PostId = 4,
                            SecondName = "Смирнова"
                        },
                        new
                        {
                            Id = 3,
                            DegreeId = 1,
                            FirstName = "Дмитрий",
                            LastName = "Иванович",
                            PostId = 2,
                            SecondName = "Кузнецов"
                        },
                        new
                        {
                            Id = 4,
                            DegreeId = 1,
                            FirstName = "Мария",
                            LastName = "Андреевна",
                            PostId = 1,
                            SecondName = "Петрова"
                        },
                        new
                        {
                            Id = 5,
                            DegreeId = 1,
                            FirstName = "Сергей",
                            LastName = "Николаевич",
                            PostId = 2,
                            SecondName = "Воробьёв"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Ольга",
                            LastName = "Сергеевна",
                            PostId = 1,
                            SecondName = "Фёдорова"
                        },
                        new
                        {
                            Id = 7,
                            DegreeId = 2,
                            FirstName = "Андрей",
                            LastName = "Владимирович",
                            PostId = 4,
                            SecondName = "Сидоров"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Людмила",
                            LastName = "Александровна",
                            PostId = 5,
                            SecondName = "Николаева"
                        });
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Workload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("StudyHoursCount")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Workloads", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisciplineId = 1,
                            StudyHoursCount = 120,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            DisciplineId = 2,
                            StudyHoursCount = 90,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            DisciplineId = 3,
                            StudyHoursCount = 150,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            DisciplineId = 4,
                            StudyHoursCount = 60,
                            TeacherId = 4
                        });
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Department", b =>
                {
                    b.HasOne("Filippov_Georgy_KT_31_21.Entities.Teacher", "Head")
                        .WithOne()
                        .HasForeignKey("Filippov_Georgy_KT_31_21.Entities.Department", "HeadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Head");
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Discipline", b =>
                {
                    b.HasOne("Filippov_Georgy_KT_31_21.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Teacher", b =>
                {
                    b.HasOne("Filippov_Georgy_KT_31_21.Entities.Degree", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Filippov_Georgy_KT_31_21.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Degree");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Filippov_Georgy_KT_31_21.Entities.Workload", b =>
                {
                    b.HasOne("Filippov_Georgy_KT_31_21.Entities.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Filippov_Georgy_KT_31_21.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
