{
  "$schema": "https://json.schemastore.org/aspire-8.0.json",
  "resources": {
    "postgresServer": {
      "type": "container.v0",
      "connectionString": "Host={postgresServer.bindings.tcp.host};Port={postgresServer.bindings.tcp.port};Username=postgres;Password={postgresServer-password.value}",
      "image": "docker.io/library/postgres:17.0",
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "{postgresServer-password.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5432
        }
      }
    },
    "Teachers": {
      "type": "value.v0",
      "connectionString": "{postgresServer.connectionString};Database=Teachers"
    },
    "sqlServerServer": {
      "type": "container.v0",
      "connectionString": "Server={sqlServerServer.bindings.tcp.host},{sqlServerServer.bindings.tcp.port};User ID=sa;Password={sqlServerServer-password.value};TrustServerCertificate=true",
      "image": "mcr.microsoft.com/mssql/server:2022-latest",
      "env": {
        "ACCEPT_EULA": "Y",
        "MSSQL_SA_PASSWORD": "{sqlServerServer-password.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 1433
        }
      }
    },
    "Disciplines": {
      "type": "value.v0",
      "connectionString": "{sqlServerServer.connectionString};Database=Disciplines"
    },
    "Workloads": {
      "type": "value.v0",
      "connectionString": "{sqlServerServer.connectionString};Database=Workloads"
    },
    "disciplineservice": {
      "type": "project.v0",
      "path": "../Filippov-Georgy-KT-31-21.DisciplineService/Filippov-Georgy-KT-31-21.DisciplineService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{disciplineservice.bindings.http.targetPort}",
        "ConnectionStrings__Disciplines": "{Disciplines.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "departmentservice": {
      "type": "project.v0",
      "path": "../Filippov-Georgy-KT-31-21.DepartmentService/Filippov-Georgy-KT-31-21.DepartmentService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{departmentservice.bindings.http.targetPort}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "teacherservice": {
      "type": "project.v0",
      "path": "../Filippov-Georgy-KT-31-21.TeacherService/Filippov-Georgy-KT-31-21.TeacherService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{teacherservice.bindings.http.targetPort}",
        "ConnectionStrings__Teachers": "{Teachers.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "workloadservice": {
      "type": "project.v0",
      "path": "../Filippov-Georgy-KT-31-21.WorkloadService/Filippov-Georgy-KT-31-21.WorkloadService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{workloadservice.bindings.http.targetPort}",
        "ConnectionStrings__Workloads": "{Workloads.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "test": {
      "type": "project.v0",
      "path": "../testDocker/testDocker.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{test.bindings.http.targetPort}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "postgresServer-password": {
      "type": "parameter.v0",
      "value": "{postgresServer-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    },
    "sqlServerServer-password": {
      "type": "parameter.v0",
      "value": "{sqlServerServer-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22,
              "minLower": 1,
              "minUpper": 1,
              "minNumeric": 1
            }
          }
        }
      }
    }
  }
}